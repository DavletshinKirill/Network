version: '3'

volumes:
  db:
    driver: local
  minio-storage:
    driver: local
  cache:
    driver: local

services:
  app:
    build: ./
    container_name: 'network-app'
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - minio
    environment:
      SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres:5432/NetworkTest"
      SPRING_DATASOURCE_USERNAME: "postgres"
      SPRING_DATASOURCE_PASSWORD: "Artes228"
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: nM14Qt0sAPygnAKH3qwh
      MINIO_SECRET_KEY: hU3ZBbyVT0PORKB7taWmaZKw0NOaSI0iCBholFKN

  postgres:
    image: 'postgres:13-alpine'
    container_name: 'network-postgres'
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "Artes228"
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data

  minio:
    image: minio/minio:latest
    command: server --console-address ":9001" /data/
    container_name: 'network-minio'
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ACCESS_KEY: nM14Qt0sAPygnAKH3qwh
      MINIO_SECRET_KEY: hU3ZBbyVT0PORKB7taWmaZKw0NOaSI0iCBholFKN
    volumes:
      - minio-storage:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://minio:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  redis:
    container_name: 'network-redis'
    image: redis:7.2-rc-alpine
    command: redis-server --save 20 1 --loglevel warning --requirepass c3NkdmN6eGN6Y3dhc2Rxd2Q=
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - cache:/data